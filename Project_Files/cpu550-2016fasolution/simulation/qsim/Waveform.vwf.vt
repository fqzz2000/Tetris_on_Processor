// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/06/2019 15:23:11"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          skeleton
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module skeleton_vlg_vec_tst();
// constants                                           
// general purpose registers
reg inclock;
reg ps2_clock;
reg ps2_data;
reg resetn;
// wires                                               
wire lcd_blon;
wire [7:0] lcd_data;
wire lcd_en;
wire lcd_on;
wire lcd_rs;
wire lcd_rw;
wire [7:0] leds;

// assign statements (if any)                          
skeleton i1 (
// port map - connection between master ports and signals/registers   
	.inclock(inclock),
	.lcd_blon(lcd_blon),
	.lcd_data(lcd_data),
	.lcd_en(lcd_en),
	.lcd_on(lcd_on),
	.lcd_rs(lcd_rs),
	.lcd_rw(lcd_rw),
	.leds(leds),
	.ps2_clock(ps2_clock),
	.ps2_data(ps2_data),
	.resetn(resetn)
);
initial 
begin 
#1000000 $finish;
end 

// inclock
always
begin
	inclock = 1'b0;
	inclock = #10000 1'b1;
	#10000;
end 

// ps2_clock
always
begin
	ps2_clock = 1'b0;
	ps2_clock = #10000 1'b1;
	#10000;
end 

// ps2_data
initial
begin
	ps2_data = 1'b1;
	ps2_data = #110000 1'b0;
end 

// resetn
initial
begin
	resetn = 1'b0;
end 
endmodule

